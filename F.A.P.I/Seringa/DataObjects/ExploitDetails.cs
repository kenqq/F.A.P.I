using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml.Linq;
using Seringa.Engine.Utils;

namespace Seringa.Engine.DataObjects
{
    public class ExploitDetails
    {
        public string Name { get; set; }
        public string UserFriendlyName { get; set; }
        public string Exploit {get; set;}
        public string ResultStart {get; set;}
        public string ResultEnd {get; set;}
        public string ErrorStart {get; set;}
        public string ErrorEnd {get; set;}
        public string ErrorValue { get; set; }
        public string InjectionStrategy { get; set; }
        public string Dbms { get; set; }
        public bool TrimLast { get; set; }

        public ExploitDetails()
        {
        }

        public ExploitDetails(XElement exploit)
        {
            Dbms = XmlHelpers.GetAttributeValue<string>(exploit, "dbms", string.Empty);
            Name = XmlHelpers.GetAttributeValue<string>(exploit, "name", string.Empty);
            UserFriendlyName = XmlHelpers.GetAttributeValue<string>(exploit, "user-friendly-name", string.Empty);
            TrimLast = XmlHelpers.GetAttributeValue<bool>(exploit, "trim-last", false);
            InjectionStrategy = XmlHelpers.GetAttributeValue<string>(exploit, "injection-strategy", string.Empty);

            Exploit = XmlHelpers.GetElementValue<string>(exploit.Descendants("value").SingleOrDefault(), string.Empty);

            if (exploit.Descendants("result").SingleOrDefault() != null)
            {
                ResultStart = XmlHelpers.GetElementValue<string>(exploit.Descendants("result").SingleOrDefault()
                                                                        .Descendants("start").SingleOrDefault(),
                                                                    string.Empty);
                ResultEnd = XmlHelpers.GetElementValue<string>(exploit.Descendants("result").SingleOrDefault()
                                                                        .Descendants("end").SingleOrDefault(),
                                                                    string.Empty);
            }

            if (exploit.Descendants("error").SingleOrDefault() != null)
            {
                ErrorStart = XmlHelpers.GetElementValue<string>(exploit.Descendants("error").SingleOrDefault()
                                                                        .Descendants("start").SingleOrDefault(),
                                                                    string.Empty);
                ErrorEnd = XmlHelpers.GetElementValue<string>(exploit.Descendants("error").SingleOrDefault()
                                                                     .Descendants("end").SingleOrDefault(),
                                                                    string.Empty);
                ErrorValue = XmlHelpers.GetElementValue<string>(exploit.Descendants("error").SingleOrDefault()
                                                                     .Descendants("value").SingleOrDefault(),
                                                                    string.Empty);
            }
            
        }
    }
}
